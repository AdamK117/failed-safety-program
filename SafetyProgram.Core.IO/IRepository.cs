using System;
using System.Collections.Generic;

namespace SafetyProgram.Core.Models
{
    /// <summary>
    /// Defines an implementation for a repository. A repository represents an
    /// information source that can provide objects.
    /// </summary>
    /// <typeparam name="TContent">The type of content generated by the repository.</typeparam>
    public interface IRepository<TContent>
    {
        /// <summary>
        /// Get items from the repository. Uses a predicate to filter items in the repository.
        /// A callback is called each time an item is retrieved from the repository.
        /// </summary>
        /// <param name="predicate">A predicate that filters items in the repository.</param>
        /// <param name="callback">A callback that is called for each item retrieved from the repository.</param>
        /// <returns>The items retrieved from the repository.</returns>
        IEnumerable<TContent> Get(Func<TContent, bool> predicate, Action<TContent> callback);

        /// <summary>
        /// Retrieves all the items in the repository. Each item retrieved from the repository will
        /// be called with a callback method.
        /// </summary>
        /// <param name="callback">A callback that is called for each item retrieved from the repository.</param>
        /// <returns>The items retrieved from the repository.</returns>
        IEnumerable<TContent> GetAll(Action<TContent> callback);

        /// <summary>
        /// Retrieves all the items in the repository.
        /// </summary>
        /// <returns>The items retrieved from the repository.</returns>
        IEnumerable<TContent> GetAll();
    }
}
